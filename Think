

model Feature {
  id                       String                   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                     String                   @unique
  unit                     String
  description              String?
  pricingPackageFeatures   PricingPackageFeature[]
  meterings                Metering[]
}

model PricingPackage {
  id              String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name            String            @unique
  priceMonthly    Int?
  organizations   Organization[]
  features        PricingPackageFeature[]
}

model PricingPackageFeature {
  id               String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  pricingPackageId String           @db.Uuid
  featureId        String           @db.Uuid
  limitValue       Int?

  pricingPackage   PricingPackage   @relation(fields: [pricingPackageId], references: [id])
  feature          Feature          @relation(fields: [featureId], references: [id])

  @@unique([pricingPackageId, featureId])
}

model Metering {
  id               String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  organizationId   String        @db.Uuid
  featureId        String        @db.Uuid
  currentValue     Int           @default(0)

  organization     Organization  @relation(fields: [organizationId], references: [id])
  feature          Feature       @relation(fields: [featureId], references: [id])
 
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt

  @@unique([organizationId, featureId])
}
